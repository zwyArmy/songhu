<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:util="http://www.springframework.org/schema/util" xmlns:tx="http://www.springframework.org/schema/tx"  xmlns:task="http://www.springframework.org/schema/task" 
 xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd" default-autowire="byName" default-lazy-init="false">
 <!-- 自动扫描dao和service包(自动注入) -->
 <context:component-scan base-package="com.weixin.core.dao.*" />
 <context:component-scan base-package="com.weixin.core.service.*" />
 <context:component-scan base-package="songhu.system.service.*" />
 <context:component-scan base-package="songhu.common.service.*" />
 
 <!-- 加载service,此时要排除要controller,因为controller已经spring-mvc中加载过了 -->
  <context:component-scan base-package="songhu.*">
 		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
 </context:component-scan>
 
 <!-- 引入属性文件 -->
 <context:property-placeholder location="classpath:dbconfig.properties" />
     <!-- 配置数据源1 -->
	<bean name="dataSource_config" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="0" />
		<!-- 连接池最大使用连接数量 -->
		<property name="maxActive" value="20" />
		<!-- 连接池最大空闲 -->
		<property name="maxIdle" value="20" />
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="0" />
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="60000" />
		<!-- <property name="poolPreparedStatements" value="true" /> <property name="maxPoolPreparedStatementPerConnectionSize" value="33" /> -->
		<property name="validationQuery" value="${validationQuery.sqlserver}" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="25200000" />

		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="true" />
		<!-- 1800秒，也就是30分钟 -->
		<property name="removeAbandonedTimeout" value="1800" />
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="true" />

		 <!-- 开启Druid的监控统计功能 -->
		 <property name="filters" value="stat" /> 
		<!--<property name="filters" value="mergeStat" />
	--></bean>
 <!-- 数据源集合 -->
 <bean id="dataSource" class="com.weixin.core.extend.datasource.DynamicDataSource">
  <property name="targetDataSources">
   <map key-type="com.weixin.core.extend.datasource.DataSourceType">
    <entry key="dataSource_config" value-ref="dataSource_config" />
    <!--  <entry key="mapdataSource" value-ref="mapdataSource" />-->
   </map>
  </property>
  <property name="defaultTargetDataSource" ref="dataSource_config" />
 </bean>

 <bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
 	<property name="configLocation">
 		<value>classpath:sqlMapConfig.xml</value>
 	</property>
 	<property name="dataSource" ref="dataSource"/>
 </bean>
 
<!-- JDBC配置 -->
<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"> 
	<property name="dataSource">
	<ref bean="dataSource"/>
	</property> 
</bean>

 
 <!-- 配置事物管理器，在*ServiceImpl里写@Transactional就可以启用事物管理 -->
 <bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
  <property name="dataSource" ref="dataSource"></property>
 </bean>
 <tx:annotation-driven transaction-manager="transactionManager" />
 
 <bean id="commonDao" class="com.weixin.core.dao.ibatis.impl.CommonDaoImpl">
 	<property name="sqlMap" ref="sqlMapClient"></property>
 </bean>
 <bean id="commonService" class="com.weixin.core.service.impl.CommonServiceImpl">
 	<property name="commonDao" ref="commonDao"></property>
 </bean>
 
<!-- 定时任务配置 -->
<context:component-scan base-package="weixin.util.timer" />
<task:executor id="executor" pool-size="5" />  
<task:scheduler id="scheduler" pool-size="10" />  
<task:annotation-driven executor="executor" scheduler="scheduler" />
</beans>